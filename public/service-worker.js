const CACHE_NAME="static-cache-v2";const DATA_CACHE_NAME="data-cache-v1";const FILES_TO_CACHE=["/","/db.js",'/favicon.ico',"/index.html","/index.js","/styles.css","/manifest.json","https://cdn.jsdelivr.net/npm/chart.js@2.8.0","https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css","https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2?v=4.7.0"];self.addEventListener("install",(e)=>{e.waitUntil(caches.open(CACHE_NAME).then(cache=>{console.log("Files were cached");return cache.addAll(FILES_TO_CACHE)}));self.skipWaiting()});self.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(keyList=>{return Promise.all(keyList.map(key=>{if(key!==CACHE_NAME&&key!==DATA_CACHE_NAME){console.log("Removed old cache"+key);return caches.delete(key)}}))}));self.clients.claim()});self.addEventListener("fetch",function(evt){if(e.request.url.includes("/api/transaction")){e.respondWith(caches.open(DATA_CACHE_NAME).then(cache=>{return fetch(e.request).then(response=>{if(response.status===200){cache.put(e.request.url,response.clone())}
return response}).catch(err=>{return cache.match(e.request)})}));return}
e.respondWith(caches.open(CACHE_NAME).then(cache=>{return cache.match(evt.request).then(response=>{return response||fetch(e.request)})}))})